(set-info :smt-lib-version 2.0)
(set-logic QF_BV)
(set-option :produce-models true)

(define-fun bvhamw1 ((x (_ BitVec 32))) (_ BitVec 32)
(bvadd (bvlshr (bvand x #xaaaaaaaa) #x00000001) (bvand x #x55555555)))
(define-fun bvhamw2 ((x (_ BitVec 32))) (_ BitVec 32)
(bvadd (bvlshr (bvand x #xcccccccc) #x00000002) (bvand x #x33333333)))
(define-fun bvhamw3 ((x (_ BitVec 32))) (_ BitVec 32)
(bvadd (bvlshr (bvand x #xf0f0f0f0) #x00000004) (bvand x #x0f0f0f0f)))
(define-fun bvhamw4 ((x (_ BitVec 32))) (_ BitVec 32)
(bvadd (bvlshr (bvand x #xff00ff00) #x00000008) (bvand x #x00ff00ff)))
(define-fun bvhamw5 ((x (_ BitVec 32))) (_ BitVec 32)
(bvadd (bvlshr (bvand x #xffff0000) #x00000010) (bvand x #x0000ffff)))
(define-fun bvhamw32_b ((x (_ BitVec 32))) (_ BitVec 32)
(bvhamw5 (bvhamw4 (bvhamw3 (bvhamw2 (bvhamw1 x))))))
(define-fun bvhamw ((x (_ BitVec 32))) (_ BitVec 16)
((_ extract 15 0) (bvhamw32_b x)))
(declare-fun  a_0_0 () (_ BitVec 32))
(declare-fun  a_0_1 () (_ BitVec 32))
(declare-fun  a_0_2 () (_ BitVec 32))
(declare-fun  a_0_3 () (_ BitVec 32))
(declare-fun  a_1_0 () (_ BitVec 32))
(declare-fun  a_1_1 () (_ BitVec 32))
(declare-fun  a_1_2 () (_ BitVec 32))
(declare-fun  a_1_3 () (_ BitVec 32))
(declare-fun  a_2_0 () (_ BitVec 32))
(declare-fun  a_2_1 () (_ BitVec 32))
(declare-fun  a_2_2 () (_ BitVec 32))
(declare-fun  a_2_3 () (_ BitVec 32))
(declare-fun  x_1_0 () (_ BitVec 32))
(declare-fun  x_1_1 () (_ BitVec 32))
(declare-fun  x_1_2 () (_ BitVec 32))
(declare-fun  x_1_3 () (_ BitVec 32))
(declare-fun  x_1_4 () (_ BitVec 32))
(declare-fun  x_1_5 () (_ BitVec 32))
(declare-fun  x_1_6 () (_ BitVec 32))
(declare-fun  x_1_7 () (_ BitVec 32))
(declare-fun  x_1_8 () (_ BitVec 32))
(declare-fun  x_1_9 () (_ BitVec 32))
(declare-fun  x_1_10 () (_ BitVec 32))
(declare-fun  x_1_11 () (_ BitVec 32))
(declare-fun  x_2_0 () (_ BitVec 32))
(declare-fun  x_2_1 () (_ BitVec 32))
(declare-fun  x_2_2 () (_ BitVec 32))
(declare-fun  x_2_3 () (_ BitVec 32))
(declare-fun  x_2_4 () (_ BitVec 32))
(declare-fun  x_2_5 () (_ BitVec 32))
(declare-fun  x_2_6 () (_ BitVec 32))
(declare-fun  x_2_7 () (_ BitVec 32))
(declare-fun  x_2_8 () (_ BitVec 32))
(declare-fun  x_2_9 () (_ BitVec 32))
(declare-fun  x_2_10 () (_ BitVec 32))
(declare-fun  x_2_11 () (_ BitVec 32))
(declare-fun  z_1_0 () (_ BitVec 32))
(declare-fun  z_1_1 () (_ BitVec 32))
(declare-fun  z_1_2 () (_ BitVec 32))
(declare-fun  z_1_3 () (_ BitVec 32))
(declare-fun  z_2_0 () (_ BitVec 32))
(declare-fun  z_2_1 () (_ BitVec 32))
(declare-fun  z_2_2 () (_ BitVec 32))
(declare-fun  z_2_3 () (_ BitVec 32))
(assert (= ((_ extract 31 31)  z_1_0 ) (_ bv0 1)))
(assert (=  z_1_0 (bvxor (bvlshr (bvxor  a_0_1  x_1_0  x_1_1) #x0001) (bvlshr  z_1_0 #x0001))))
(assert (= (bvxor  x_1_1  a_0_1) (bvand (bvxor  x_1_1   a_0_1)  z_1_0)))
(assert (= (bvxor  x_1_1  x_1_0) (bvand (bvxor  x_1_1   x_1_0)  z_1_0)))
(assert (= ((_ extract 31 31)  z_1_1) (_ bv0 1)))
(assert (=  z_1_1 (bvxor (bvlshr (bvxor  x_1_8  x_1_4  x_1_9) #x0001) (bvlshr  z_1_1 #x0001))))
(assert (= (bvxor  x_1_9  x_1_4) (bvand (bvxor  x_1_9   x_1_4)  z_1_1)))
(assert (= (bvxor  x_1_9  x_1_8) (bvand (bvxor  x_1_9   x_1_8)  z_1_1)))
(assert (= ((_ extract 31 31)  z_1_2) (_ bv0 1)))
(assert (=  z_1_2 (bvxor (bvlshr (bvxor  a_0_2  x_1_6  x_1_7) #x0001) (bvlshr  z_1_2 #x0001))))
(assert (= (bvxor  x_1_7  a_0_2) (bvand (bvxor  x_1_7   a_0_2)  z_1_2)))
(assert (= (bvxor  x_1_7  x_1_6) (bvand (bvxor  x_1_7   x_1_6)  z_1_2)))
(assert (= ((_ extract 31 31)  z_1_3) (_ bv0 1)))
(assert (=  z_1_3 (bvxor (bvlshr (bvxor ((_ rotate_left 16)  x_1_3)  x_1_10  x_1_11) #x0001) (bvlshr  z_1_3 #x0001))))
(assert (= (bvxor  x_1_11  x_1_10) (bvand (bvxor  x_1_11   x_1_10)  z_1_3)))
(assert (= (bvxor  x_1_11 ((_ rotate_left 16)  x_1_3)) (bvand (bvxor  x_1_11  ((_ rotate_left 16)  x_1_3))  z_1_3)))
(assert (=  a_0_0 (bvxor ((_ rotate_right 5) x_1_2)  x_1_0)))
(assert (=  x_1_1 (bvxor  x_1_2  x_1_3)))
(assert (=  x_1_7 (bvxor  x_1_5  x_1_8)))
(assert (=  x_1_11 (bvxor  a_1_3  a_1_1)))
(assert (=  x_1_2 (bvxor ((_ rotate_right 7) a_1_0)  x_1_4)))
(assert (=  x_1_9 (bvxor ((_ rotate_right 16) a_1_2)  a_1_0)))
(assert (=  a_0_3 (bvxor ((_ rotate_right 8) x_1_5)  x_1_6)))
(assert (=  x_1_5 (bvxor ((_ rotate_right 13) a_1_3)  x_1_10)))
(assert (= ((_ extract 31 31)  z_2_0 ) (_ bv0 1)))
(assert (=  z_2_0 (bvxor (bvlshr (bvxor  a_1_1  x_2_0  x_2_1) #x0001) (bvlshr  z_2_0 #x0001))))
(assert (= (bvxor  x_2_1  a_1_1) (bvand (bvxor  x_2_1   a_1_1)  z_2_0)))
(assert (= (bvxor  x_2_1  x_2_0) (bvand (bvxor  x_2_1   x_2_0)  z_2_0)))
(assert (= ((_ extract 31 31)  z_2_1) (_ bv0 1)))
(assert (=  z_2_1 (bvxor (bvlshr (bvxor  x_2_8  x_2_4  x_2_9) #x0001) (bvlshr  z_2_1 #x0001))))
(assert (= (bvxor  x_2_9  x_2_4) (bvand (bvxor  x_2_9   x_2_4)  z_2_1)))
(assert (= (bvxor  x_2_9  x_2_8) (bvand (bvxor  x_2_9   x_2_8)  z_2_1)))
(assert (= ((_ extract 31 31)  z_2_2) (_ bv0 1)))
(assert (=  z_2_2 (bvxor (bvlshr (bvxor  a_1_2  x_2_6  x_2_7) #x0001) (bvlshr  z_2_2 #x0001))))
(assert (= (bvxor  x_2_7  a_1_2) (bvand (bvxor  x_2_7   a_1_2)  z_2_2)))
(assert (= (bvxor  x_2_7  x_2_6) (bvand (bvxor  x_2_7   x_2_6)  z_2_2)))
(assert (= ((_ extract 31 31)  z_2_3) (_ bv0 1)))
(assert (=  z_2_3 (bvxor (bvlshr (bvxor ((_ rotate_left 16)  x_2_3)  x_2_10  x_2_11) #x0001) (bvlshr  z_2_3 #x0001))))
(assert (= (bvxor  x_2_11  x_2_10) (bvand (bvxor  x_2_11   x_2_10)  z_2_3)))
(assert (= (bvxor  x_2_11 ((_ rotate_left 16)  x_2_3)) (bvand (bvxor  x_2_11  ((_ rotate_left 16)  x_2_3))  z_2_3)))
(assert (=  a_1_0 (bvxor ((_ rotate_right 5) x_2_2)  x_2_0)))
(assert (=  x_2_1 (bvxor  x_2_2  x_2_3)))
(assert (=  x_2_7 (bvxor  x_2_5  x_2_8)))
(assert (=  x_2_11 (bvxor  a_2_3  a_2_1)))
(assert (=  x_2_2 (bvxor ((_ rotate_right 7) a_2_0)  x_2_4)))
(assert (=  x_2_9 (bvxor ((_ rotate_right 16) a_2_2)  a_2_0)))
(assert (=  a_1_3 (bvxor ((_ rotate_right 8) x_2_5)  x_2_6)))
(assert (=  x_2_5 (bvxor ((_ rotate_right 13) a_2_3)  x_2_10)))
(declare-fun  aa_0_0 () (_ BitVec 32))
(declare-fun  aa_0_1 () (_ BitVec 32))
(declare-fun  aa_0_2 () (_ BitVec 32))
(declare-fun  aa_0_3 () (_ BitVec 32))
(declare-fun  aa_1_0 () (_ BitVec 32))
(declare-fun  aa_1_1 () (_ BitVec 32))
(declare-fun  aa_1_2 () (_ BitVec 32))
(declare-fun  aa_1_3 () (_ BitVec 32))
(declare-fun  aa_2_0 () (_ BitVec 32))
(declare-fun  aa_2_1 () (_ BitVec 32))
(declare-fun  aa_2_2 () (_ BitVec 32))
(declare-fun  aa_2_3 () (_ BitVec 32))
(declare-fun  xx_1_0 () (_ BitVec 32))
(declare-fun  xx_1_1 () (_ BitVec 32))
(declare-fun  xx_1_2 () (_ BitVec 32))
(declare-fun  xx_1_3 () (_ BitVec 32))
(declare-fun  xx_1_4 () (_ BitVec 32))
(declare-fun  xx_1_5 () (_ BitVec 32))
(declare-fun  xx_1_6 () (_ BitVec 32))
(declare-fun  xx_1_7 () (_ BitVec 32))
(declare-fun  xx_1_8 () (_ BitVec 32))
(declare-fun  xx_1_9 () (_ BitVec 32))
(declare-fun  xx_1_10 () (_ BitVec 32))
(declare-fun  xx_1_11 () (_ BitVec 32))
(declare-fun  xx_2_0 () (_ BitVec 32))
(declare-fun  xx_2_1 () (_ BitVec 32))
(declare-fun  xx_2_2 () (_ BitVec 32))
(declare-fun  xx_2_3 () (_ BitVec 32))
(declare-fun  xx_2_4 () (_ BitVec 32))
(declare-fun  xx_2_5 () (_ BitVec 32))
(declare-fun  xx_2_6 () (_ BitVec 32))
(declare-fun  xx_2_7 () (_ BitVec 32))
(declare-fun  xx_2_8 () (_ BitVec 32))
(declare-fun  xx_2_9 () (_ BitVec 32))
(declare-fun  xx_2_10 () (_ BitVec 32))
(declare-fun  xx_2_11 () (_ BitVec 32))
(declare-fun  zz_1_0 () (_ BitVec 32))
(declare-fun  zz_1_1 () (_ BitVec 32))
(declare-fun  zz_1_2 () (_ BitVec 32))
(declare-fun  zz_1_3 () (_ BitVec 32))
(declare-fun  zz_2_0 () (_ BitVec 32))
(declare-fun  zz_2_1 () (_ BitVec 32))
(declare-fun  zz_2_2 () (_ BitVec 32))
(declare-fun  zz_2_3 () (_ BitVec 32))
(assert (= ((_ extract 31 31)  zz_1_0 ) (_ bv0 1)))
(assert (=  zz_1_0 (bvxor (bvlshr (bvxor  aa_0_1  xx_1_0  xx_1_1) #x0001) (bvlshr  zz_1_0 #x0001))))
(assert (= (bvxor  xx_1_1  aa_0_1) (bvand (bvxor  xx_1_1   aa_0_1)  zz_1_0)))
(assert (= (bvxor  xx_1_1  xx_1_0) (bvand (bvxor  xx_1_1   xx_1_0)  zz_1_0)))
(assert (= ((_ extract 31 31)  zz_1_1) (_ bv0 1)))
(assert (=  zz_1_1 (bvxor (bvlshr (bvxor  xx_1_8  xx_1_4  xx_1_9) #x0001) (bvlshr  zz_1_1 #x0001))))
(assert (= (bvxor  xx_1_9  xx_1_4) (bvand (bvxor  xx_1_9   xx_1_4)  zz_1_1)))
(assert (= (bvxor  xx_1_9  xx_1_8) (bvand (bvxor  xx_1_9   xx_1_8)  zz_1_1)))
(assert (= ((_ extract 31 31)  zz_1_2) (_ bv0 1)))
(assert (=  zz_1_2 (bvxor (bvlshr (bvxor  aa_0_2  xx_1_6  xx_1_7) #x0001) (bvlshr  zz_1_2 #x0001))))
(assert (= (bvxor  xx_1_7  aa_0_2) (bvand (bvxor  xx_1_7   aa_0_2)  zz_1_2)))
(assert (= (bvxor  xx_1_7  xx_1_6) (bvand (bvxor  xx_1_7   xx_1_6)  zz_1_2)))
(assert (= ((_ extract 31 31)  zz_1_3) (_ bv0 1)))
(assert (=  zz_1_3 (bvxor (bvlshr (bvxor ((_ rotate_left 16)  xx_1_3)  xx_1_10  xx_1_11) #x0001) (bvlshr  zz_1_3 #x0001))))
(assert (= (bvxor  xx_1_11  xx_1_10) (bvand (bvxor  xx_1_11   xx_1_10)  zz_1_3)))
(assert (= (bvxor  xx_1_11 ((_ rotate_left 16)  xx_1_3)) (bvand (bvxor  xx_1_11  ((_ rotate_left 16)  xx_1_3))  zz_1_3)))
(assert (=  aa_0_0 (bvxor ((_ rotate_right 5) xx_1_2)  xx_1_0)))
(assert (=  xx_1_1 (bvxor  xx_1_2  xx_1_3)))
(assert (=  xx_1_7 (bvxor  xx_1_5  xx_1_8)))
(assert (=  xx_1_11 (bvxor  aa_1_3  aa_1_1)))
(assert (=  xx_1_2 (bvxor ((_ rotate_right 7) aa_1_0)  xx_1_4)))
(assert (=  xx_1_9 (bvxor ((_ rotate_right 16) aa_1_2)  aa_1_0)))
(assert (=  aa_0_3 (bvxor ((_ rotate_right 8) xx_1_5)  xx_1_6)))
(assert (=  xx_1_5 (bvxor ((_ rotate_right 13) aa_1_3)  xx_1_10)))
(assert (= ((_ extract 31 31)  zz_2_0 ) (_ bv0 1)))
(assert (=  zz_2_0 (bvxor (bvlshr (bvxor  aa_1_1  xx_2_0  xx_2_1) #x0001) (bvlshr  zz_2_0 #x0001))))
(assert (= (bvxor  xx_2_1  aa_1_1) (bvand (bvxor  xx_2_1   aa_1_1)  zz_2_0)))
(assert (= (bvxor  xx_2_1  xx_2_0) (bvand (bvxor  xx_2_1   xx_2_0)  zz_2_0)))
(assert (= ((_ extract 31 31)  zz_2_1) (_ bv0 1)))
(assert (=  zz_2_1 (bvxor (bvlshr (bvxor  xx_2_8  xx_2_4  xx_2_9) #x0001) (bvlshr  zz_2_1 #x0001))))
(assert (= (bvxor  xx_2_9  xx_2_4) (bvand (bvxor  xx_2_9   xx_2_4)  zz_2_1)))
(assert (= (bvxor  xx_2_9  xx_2_8) (bvand (bvxor  xx_2_9   xx_2_8)  zz_2_1)))
(assert (= ((_ extract 31 31)  zz_2_2) (_ bv0 1)))
(assert (=  zz_2_2 (bvxor (bvlshr (bvxor  aa_1_2  xx_2_6  xx_2_7) #x0001) (bvlshr  zz_2_2 #x0001))))
(assert (= (bvxor  xx_2_7  aa_1_2) (bvand (bvxor  xx_2_7   aa_1_2)  zz_2_2)))
(assert (= (bvxor  xx_2_7  xx_2_6) (bvand (bvxor  xx_2_7   xx_2_6)  zz_2_2)))
(assert (= ((_ extract 31 31)  zz_2_3) (_ bv0 1)))
(assert (=  zz_2_3 (bvxor (bvlshr (bvxor ((_ rotate_left 16)  xx_2_3)  xx_2_10  xx_2_11) #x0001) (bvlshr  zz_2_3 #x0001))))
(assert (= (bvxor  xx_2_11  xx_2_10) (bvand (bvxor  xx_2_11   xx_2_10)  zz_2_3)))
(assert (= (bvxor  xx_2_11 ((_ rotate_left 16)  xx_2_3)) (bvand (bvxor  xx_2_11  ((_ rotate_left 16)  xx_2_3))  zz_2_3)))
(assert (=  aa_1_0 (bvxor ((_ rotate_right 5) xx_2_2)  xx_2_0)))
(assert (=  xx_2_1 (bvxor  xx_2_2  xx_2_3)))
(assert (=  xx_2_7 (bvxor  xx_2_5  xx_2_8)))
(assert (=  xx_2_11 (bvxor  aa_2_3  aa_2_1)))
(assert (=  xx_2_2 (bvxor ((_ rotate_right 7) aa_2_0)  xx_2_4)))
(assert (=  xx_2_9 (bvxor ((_ rotate_right 16) aa_2_2)  aa_2_0)))
(assert (=  aa_1_3 (bvxor ((_ rotate_right 8) xx_2_5)  xx_2_6)))
(assert (=  xx_2_5 (bvxor ((_ rotate_right 13) aa_2_3)  xx_2_10)))
(assert (=  aa_0_0 ((_ rotate_right 1)  a_0_0) ))
(assert (=  aa_0_1 ((_ rotate_right 1)  a_0_1) ))
(assert (=  aa_0_2 ((_ rotate_right 1)  a_0_2) ))
(assert (=  aa_0_3 ((_ rotate_right 1)  a_0_3) ))
(assert (=  aa_2_0 ((_ rotate_right 1)  a_2_0) ))
(assert (=  aa_2_1 ((_ rotate_right 1)  a_2_1) ))
(assert (=  aa_2_2 ((_ rotate_right 1)  a_2_2) ))
(assert (=  aa_2_3 ((_ rotate_right 1)  a_2_3) ))
(assert (= (bvadd (bvhamw  z_1_0)  (bvhamw zz_1_0) (bvhamw  z_1_1)  (bvhamw zz_1_1) (bvhamw  z_1_2)  (bvhamw zz_1_2) (bvhamw  z_1_3)  (bvhamw zz_1_3) (bvhamw  z_2_0)  (bvhamw zz_2_0) (bvhamw  z_2_1)  (bvhamw zz_2_1) (bvhamw  z_2_2)  (bvhamw zz_2_2) (bvhamw  z_2_3)  (bvhamw zz_2_3)) (_ bv7 16) ))
(check-sat)
(get-value (( a_2_0) ( a_2_1) ( a_2_2) ( a_2_3)))
(exit)
